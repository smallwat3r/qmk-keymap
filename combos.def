// left base
COMB(C_LB_X,          KC_X,           CK_1,        CK_2,   CK_3)
COMB(C_LB_Q,          KC_Q,           CK_2,        CK_3)
#ifndef KEY_COUNT_30
COMB(C_LB_COMMA,      KC_COMMA,       CK_5,        CK_6)
#endif
COMB(C_LB_Z,          KC_Z,           CK_9,        CK_10)
COMB(C_LB_V,          KC_V,           CK_6,        CK_11)
COMB(C_LB_LBRC,       KC_LBRC,        CK_1,        CK_3)
COMB(C_LB_LPRN,       KC_LPRN,        CK_9,        CK_11)
COMB(C_LB_OSM_S,      OSM(MOD_LSFT),  CK_5,        CK_6,   CK_7)
SUBS(C_LB_TH,         "th",           CK_6,        CK_7)
SUBS(C_LB_SH,         "sh",           CK_5,        CK_7)
// right base
COMB(C_RB_J,          KC_J,           CK_14,       CK_15)
#ifndef KEY_COUNT_30
COMB(C_RB_ESC,        KC_ESC,         CK_18,       CK_19,  CK_20)
#endif
COMB(C_RB_UNDS,       KC_UNDS,        CK_22,       CK_19)
COMB(C_RB_SCLN,       KC_SCLN,        CK_23,       CK_24)
COMB(C_RB_RBRC,       KC_RBRC,        CK_14,       CK_16)
COMB(C_RB_RPRN,       KC_RPRN,        CK_22,       CK_24)
COMB(C_RB_DASH,       KC_MINS,        CK_18,       CK_20)
COMB(C_RB_QUOT,       KC_QUOT,        CK_22,       CK_23)
SUBS(C_RB_YOU,        "you",          CK_16,       CK_18)
SUBS(C_RB_ION,        "ion",          CK_22,       CK_20)
SUBS(C_RB_ING,        "ing",          CK_18,       CK_21)
// both base
COMB(C_BB_CAPS,       KC_CAPS,        CK_7,        CK_18)
COMB(C_BB_PSCRN,      SGUI(KC_4),     CK_1,        CK_16)
// left sym
#ifndef KEY_COUNT_30
COMB(C_LS_EURO,       KC_EURO,        LSFT(KC_3),  LSFT(KC_4))
#endif
SUBS(C_LS_DOCSTRING,  "\"\"\"",       KC_EQUAL,    LSFT(KC_QUOTE))
SUBS(C_LS_MARKCODE,   "```",          LSFT(KC_7),  KC_GRAVE)
// right sym
#ifndef KEY_COUNT_30
COMB(C_RS_CIRC,       KC_CIRC,        RALT(KC_3),  LSFT(KC_GRAVE))
#endif
// left edit
COMB(C_LE_SAVE,       LGUI(KC_S),     LGUI(KC_C),  LGUI(KC_V))
// right fun
COMB(C_RF_F10,        KC_F10,         KC_F7,       KC_F8)
COMB(C_RF_F11,        KC_F11,         KC_F8,       KC_F9)
COMB(C_RF_F12,        KC_F12,         KC_F7,       KC_F8,    KC_F9)
// left sys
COMB(C_LSYS_AC_ON,    AC_ON,          KC_WH_R,     KC_WH_U,  KC_WH_D)
COMB(C_LSYS_AC_OFF,   AC_OFF,         G(KC_KP_MINUS),  G(KC_KP_PLUS),  RGB_TOG)
